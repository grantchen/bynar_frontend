{"version":3,"file":"static/js/260.c63e3660.chunk.js","mappings":"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","sources":["pages/signup/index.js","frames/Frames.tsx","../../src/frames/components/card-frame.tsx","../../src/frames/components/card-number.tsx","../../src/frames/components/cvv.tsx","../../src/frames/components/expiry-date.tsx","../../src/frames/components/scheme-choice.tsx","../../src/frames/config/config.tsx","frames/index.tsx"],"sourcesContent":["import {\n  Button,\n  Checkbox,\n  Column,\n  Content,\n  Grid,\n  Heading,\n  InlineLoading,\n  Link,\n  Select,\n  SelectItem,\n  TextInput,\n  ToastNotification,\n} from \"@carbon/react\";\nimport { CardFrame, Frames } from \"frames-react\";\nimport React, { useEffect, useLayoutEffect, useRef, useState } from \"react\";\nimport {\n  BaseURL,\n  COUNTRIES,\n  formatCVC,\n  formatCreditCardNumber,\n  formatExpirationDate,\n  useAuth,\n} from \"./../../sdk\";\n\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./../../styles/paymentform.scss\";\nimport \"./signup.scss\";\nimport {\n  PhoneNumberUtil} from \"google-libphonenumber\";\n\nconst Signup = () => {\n  const phoneUtil = PhoneNumberUtil.getInstance();\n  const navigate = useNavigate();\n  const [errorNotification, setErrorNotification] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [resendCodeLoading, setResendCodeLoading] = useState(false);\n  const [verifyEmailLoading, setVerifyEmailLoading] = useState(false);\n  const [loadingSuccess, setLoadingSuccess] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmailAddress] = useState(\"\");\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [passwordArray, setPasswordArray] = useState(Array(6).fill(false));\n  const [passwordStrengthWidth, setpaswordStrengthWidth] = useState(0);\n  const [passwordIsValid, setPasswordIsValid] = useState(true);\n  const [emailIsValid, setEmailValid] = useState(true);\n  const [activeStep, setActiveStep] = useState(1);\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [isProfileInfoUpdated, setIsProfileInfoUpdated] = useState(false);\n  const [isAccountInfoUpdated, setIsAccountInfoUpdated] = useState(false);\n  const [country, setCountry] = useState(\"India\");\n  const [addressLine1, setAddressLine1] = useState(\"\");\n  const [addressLine2, setAddressLine2] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [state, setState] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"91\");\n  const [isTaxInfoUpdated, setIsTaxInfoUpdated] = useState(false);\n  const [vatNumber, setVatNumber] = useState(\"\");\n  const [organizationName, setOrganizationName] = useState(\"\");\n  const [organizationCountry, setCountryName] = useState(\"India\");\n  const [isGstValid, setGstValid] = useState(true);\n  const [cardNumber, setCardNumber] = useState(\"\");\n  const [cardExpiryDate, setCardExpiryDate] = useState(\"\");\n  const [cardCVV, setCardCVV] = useState(\"\");\n  const [isChecked, setIsChecked] = useState(true);\n  const [isCardInfoUpdated, setCardInfoUpdated] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [isAccountInfoError, setIsAccountInfoError] = useState(false);\n  const [isVerifyEmailInfoError, setIsVerifyEmailError] = useState(false);\n  const [postalCodeErrorNotification, setPostalCodeErrorNotification] =\n    useState({});\n  const [isCreateAccountError, setIsCreateAccountError] = useState(false);\n  const [userId, setUserId] = useState();\n  const [message, setMessage] = useState(\"creating account ...\");\n  const [validationToken, setValidationToken] = useState(\"\");\n  const ref = useRef(null);\n  const [loadingCardSuccess, setLoadingCardSuccess] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [phoneNumberValid, setIsPhoneNumberValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [accountInfoErrors, setAccountInfoErrors] = useState({\n    fullName: false,\n    addressLine1: false,\n    city: false,\n    state: false,\n    postalCode: false,\n    phoneNumber: false,\n  });\n  const [organizationInfoErrors, setOrganizationInfoErrors] = useState({\n    organizationName: false,\n    organizationNumber: false,\n  });\n  const [countryCode, setCountryCode] = useState('IN');\n  const [countryDialCode, setCountryDialCode] = useState('91');\n\n  const {hackPatchToken} = useAuth()\n\n\n  const accountInfoButtonDisabled =\n    !emailIsValid || email.length === 0 || isAccountInfoError;\n  const personalInfoButtonDisabled =\n    fullName.trim().length === 0 ||\n    city.trim().length === 0 ||\n    state.trim().length === 0 ||\n    postalCode.trim().length === 0 ||\n    !phoneNumberValid ||\n    addressLine1.trim().length === 0 ||\n    Object.keys(postalCodeErrorNotification).length != 0;\n  const verificationEmailButtonDisabled =\n    verificationCode.length === 0 || isVerifyEmailInfoError;\n\n  const handleFullName = (e) => {\n    const { name, value } = e.target;\n    setFullName(value);\n    setAccountInfoErrors({\n      ...accountInfoErrors,\n      [name]: value.trim().length === 0,\n    });\n  };\n\n  const handleAddressLine1 = (e) => {\n    const { name, value } = e.target;\n    setAddressLine1(value);\n    setAccountInfoErrors({\n      ...accountInfoErrors,\n      [name]: value.trim().length === 0,\n    });\n  };\n\n  const handleCity = (e) => {\n    const { name, value } = e.target;\n    setCity(value);\n    setAccountInfoErrors({\n      ...accountInfoErrors,\n      [name]: value.trim().length === 0,\n    });\n  };\n\n  const handleState = (e) => {\n    const { name, value } = e.target;\n    setState(value);\n    setAccountInfoErrors({\n      ...accountInfoErrors,\n      [name]: value.trim().length === 0,\n    });\n  };\n\n  const validatePhoneNumber = (value, dialCode, country) => {\n    if (value == dialCode) {\n      setErrorMessage(\"Enter valid phone number\")\n      setIsPhoneNumberValid(false)\n    }\n    else {\n      const phoneNumberWithoutDialCode = value.toString().replace(dialCode, '');\n      if (phoneNumberWithoutDialCode.length == 0) {\n        setErrorMessage(\"Phone number is required\")\n        setIsPhoneNumberValid(false)\n      }\n      else if (phoneNumberWithoutDialCode == value) {\n        setErrorMessage(\"Enter valid phone number\")\n        setIsPhoneNumberValid(false)\n      }\n      else {\n\n        try {\n          const number = phoneUtil.parse(phoneNumberWithoutDialCode, country);\n          const isValid = phoneUtil.isValidNumber(number);\n          if (!isValid) {\n            setErrorMessage(\"Enter valid phone number\")\n            setIsPhoneNumberValid(false)\n          }\n          else {\n            setErrorMessage(\"\")\n            setIsPhoneNumberValid(true)\n          }\n        }\n        catch (e) {\n          setErrorMessage(\"Enter valid phone number\")\n          setIsPhoneNumberValid(false)\n        }\n      }\n    }\n  }\n\n  const handlePhoneNumber = (value, country, formattedValue) => {\n    setPhoneNumber(value)\n    setCountryCode(country?.countryCode);\n    setCountryDialCode(\n        country?.dialCode.toString().replace(\"+\", \"\")\n    );\n    validatePhoneNumber(value, country.dialCode, country?.countryCode);\n\n  }\n\n\n  const handleVerificationCodeChange = (value) => {\n    setErrorNotification({});\n    setVerificationCode(value);\n    setIsError(false);\n    setIsVerifyEmailError(false);\n    const errors = validateVerifyEmailForm(value);\n    setErrors(errors);\n  };\n\n  useLayoutEffect(() => {\n    handlePasswordStrengthLength(password);\n  }, [isPasswordVisible]);\n\n  const handlePasswordStrengthLength = (value) => {\n    const lengthRegex = /^.{8,}$/;\n    const uppercaseRegex = /[A-Z]/;\n    const lowercaseRegex = /[a-z]/;\n    const numberRegex = /[0-9]/;\n    const specialcharacterRegex = /[-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#]/;\n    const tempArray = [\n      lengthRegex.test(value.trim()),\n      uppercaseRegex.test(value),\n      lowercaseRegex.test(value),\n      numberRegex.test(value),\n      specialcharacterRegex.test(value),\n      value.length === value.trim().length,\n    ];\n    setpaswordStrengthWidth(\n      (tempArray.filter((i) => i === true).length * ref?.current?.offsetWidth) /\n      6\n    );\n  };\n\n  /* Function to check if email address is valid or not */\n  const checkEmailValid = (value) => {\n    return String(value)\n      .toLowerCase()\n      .match(\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n      );\n  };\n\n  /* Function to set state, check email address validation when email address is changed  */\n  const handleEmailChange = (value) => {\n    setErrorNotification({});\n    setIsError(false);\n    setIsAccountInfoError(false);\n    setEmailAddress(value);\n    const errors = validateOrganizationForm(value);\n    setErrors(errors);\n    // setEmailValid(checkEmailValid(value));\n  };\n\n  const handlePasswordChange = (value) => {\n    setErrorNotification({});\n    setIsError(false);\n    setIsAccountInfoError(false);\n    setPassword(value);\n    const lengthRegex = /^.{8,}$/;\n    const uppercaseRegex = /[A-Z]/;\n    const lowercaseRegex = /[a-z]/;\n    const numberRegex = /[0-9]/;\n    const specialcharacterRegex = /[-!$%^&*()_+|~=`{}\\[\\]:\\/;<>?,.@#]/;\n    const tempArray = [\n      lengthRegex.test(value.trim()),\n      uppercaseRegex.test(value),\n      lowercaseRegex.test(value),\n      numberRegex.test(value),\n      specialcharacterRegex.test(value),\n      value.length === value.trim().length,\n    ];\n    setPasswordArray(tempArray);\n    setpaswordStrengthWidth(\n      (tempArray.filter((i) => i === true).length * ref?.current?.offsetWidth) /\n      6\n    );\n    setPasswordIsValid(\n      lengthRegex.test(value.trim()) &&\n      uppercaseRegex.test(value) &&\n      lowercaseRegex.test(value) &&\n      numberRegex.test(value) &&\n      specialcharacterRegex.test(value)\n    );\n  };\n\n  /* Function to send email as payload  ,if api response is 200 then proceed with email verification,otherwise in case of error show error in signup page*/\n  const handleSignupRequest = () => {\n    const fetchData = async () => {\n      setLoading(true);\n      setResendCodeLoading(true);\n      setErrorNotification({});\n      setIsError(false);\n      try {\n        const data = {\n          email: email.trim(),\n          // password: password,\n        };\n        const response = await fetch(`${BaseURL}/signup`, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const res = await response.json();\n        if (response.ok) {\n          setActiveStep(2);\n          setIsError(false);\n          setIsAccountInfoError(false);\n          if (activeStep === 2) {\n            setErrorNotification({\n              title: `verification code re-send to ${email}`,\n              status: \"success\",\n            });\n            setIsError(true);\n          }\n        } else if (response.status === 500) {\n          setIsError(true);\n          setActiveStep(1);\n          setErrorNotification({\n            title:\n              res.error === \"username already exist\" || \"email is not valid\"\n                ? res.error\n                : \"Some error occured, please try after some time\",\n            status: \"error\",\n          });\n        }\n        setLoading(false);\n        setResendCodeLoading(false);\n      } catch (e) {\n        setLoading(false);\n        console.log(e);\n      }\n    };\n    fetchData();\n  };\n\n  const handleEditClick = (value) => {\n    setActiveStep(value);\n    setIsAccountInfoUpdated(true);\n  };\n\n  /* Function to verify user email during signup process , if email is verified sucessfully then proceed to next step ,otherwise in case of error show error in signup page*/\n  const handleVerifyEmail = () => {\n    const fetchData = async () => {\n      setErrorNotification({});\n      setIsError(false);\n      try {\n        setVerifyEmailLoading(true);\n        const data = {\n          email: email,\n          code: verificationCode,\n        };\n        // debugger\n        // await Auth.confirmSignUp(email, verificationCode);\n        // debugger\n        const response = await fetch(`${BaseURL}/confirm-email`, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const res = await response.json();\n        if (response.ok) {\n          setActiveStep(3);\n          setIsError(false);\n          setIsVerifyEmailError(false);\n          setUserId(res?.accountID);\n        } else if (response.status === 500) {\n          setIsError(true);\n          setIsVerifyEmailError(true);\n          setErrorNotification({\n            title: \"Enter valid confirmation email code\",\n            status: \"error\",\n          });\n          setVerificationCode(\"\");\n        }\n        setVerifyEmailLoading(false);\n      } catch (e) {\n        setVerifyEmailLoading(false);\n        console.log(e);\n      }\n    };\n    fetchData();\n  };\n\n  const handleVerifyCard = (token) => {\n    const fetchData = async () => {\n      try {\n        // setLoadingCardSuccess(true)\n        const data = {\n          id: userId,\n          token: token,\n          email: email,\n          name: fullName,\n        };\n        const response = await fetch(`${BaseURL}/verify-card`, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        const res = await response.json();\n\n        if (response.ok) {\n          handleCreateAccount();\n        } else if (response.status === 500) {\n          setIsError(true);\n          setErrorNotification({\n            title: \"error occured while validating card\",\n            status: \"error\",\n          });\n        }\n        setLoadingCardSuccess(false);\n      } catch (e) {\n        setLoadingCardSuccess(false);\n        console.log(e);\n      }\n    };\n    fetchData();\n  };\n\n  /* Function to create user account ,if account created sucessfully then navigate to signin page ,otherwise in case of error show error in signup page */\n  const handleCreateAccount = () => {\n    const fetchData = async () => {\n      try {\n        setLoadingSuccess(true);\n        const data = {\n          id: userId,\n          username: email,\n          fullName: fullName,\n          country: country,\n          addressLine: addressLine1,\n          addressLine2: addressLine2,\n          city: city,\n          postalCode: postalCode,\n          state: state,\n          phoneNumber: phoneNumber,\n          organizationName: organizationName,\n          VAT: vatNumber,\n          organisationCountry: organizationCountry,\n          isAgreementSigned: true,\n        };\n        const response = await fetch(`${BaseURL}/create-user`, {\n          method: \"POST\",\n          body: JSON.stringify(data),\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (response.ok) {\n          const res = await response.json();\n          hackPatchToken(res.token)\n        } else if (response.status === 500) {\n          setIsError(true);\n          setErrorNotification({\n            title: \"error occured while creating user account\",\n            status: \"error\",\n          });\n          setVerificationCode(\"\");\n          setIsChecked(false);\n          setActiveStep(1);\n        }\n        setLoadingSuccess(false);\n      } catch (e) {\n        setLoadingSuccess(false);\n        console.log(e);\n      }\n    };\n    fetchData();\n  };\n\n  const handlePersonalInfo = () => {\n    setIsProfileInfoUpdated(true);\n    setActiveStep(4);\n  };\n\n  const handleVatNumberChange = (e) => {\n    const { name, value } = e.target;\n    setVatNumber(value);\n    setOrganizationInfoErrors({\n      ...organizationInfoErrors,\n      [name]: value.trim().length === 0,\n    });\n    // const gstRegex = /[0-9]{2}[A-Z]{3}[ABCFGHLJPTF]{1}[A-Z]{1}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}/;\n    setGstValid(value.length > 0);\n  };\n\n  const handleOrganizationNameChange = (e) => {\n    const { name, value } = e.target;\n    setOrganizationName(value);\n    setOrganizationInfoErrors({\n      ...organizationInfoErrors,\n      [name]: value.trim().length === 0,\n    });\n  };\n\n  const handleTaxInfo = () => {\n    setIsTaxInfoUpdated(true);\n    setActiveStep(5);\n  };\n\n  const handleCardInfo = () => {\n    setCardInfoUpdated(true);\n    setActiveStep(6);\n  };\n\n  const handleInputChange = ({ target }) => {\n    if (target.name === \"number\") {\n      target.value = formatCreditCardNumber(target.value);\n      setCardNumber(target.value);\n    } else if (target.name === \"expiry\") {\n      target.value = formatExpirationDate(target.value);\n      setCardExpiryDate(target.value);\n    } else if (target.name === \"cvc\") {\n      target.value = formatCVC(target.value);\n      setCardCVV(target.value);\n    }\n  };\n\n  const postalCodeValidation = (value) => {\n    if (value.length === 0) {\n      setPostalCodeErrorNotification({ title: \"Postal code is required\" });\n    } else {\n      setPostalCodeErrorNotification({});\n    }\n  };\n\n  /* Function to handle postal code change and also check validations for postal code */\n  const handlePostalCode = (e) => {\n    setPostalCode(e.target.value.trim());\n    postalCodeValidation(e.target.value.trim());\n  };\n\n  const handleVerifyCardDetails = async (e) => {\n    e.preventDefault();\n    setLoadingCardSuccess(true);\n    try {\n      const res = await Frames.submitCard();\n      setValidationToken(res.token);\n      handleVerifyCard(res.token);\n    } catch (e) {\n      setLoadingCardSuccess(false);\n      setIsError(true);\n      setErrorNotification({\n        title:\n          e === \"Card form invalid\"\n            ? \"Invalid card details\"\n            : \"error occured while creating user account\",\n        status: \"error\",\n      });\n\n      console.log(e);\n    }\n    Frames.init(\"pk_sbox_u4jn2iacxvzosov4twmtl2yzlqe\");\n  };\n\n  const creditCardButtonDisabled =\n    cardCVV.length === 0 ||\n    cardExpiryDate.length === 0 ||\n    cardNumber.length === 0;\n\n  const taxInfoButtonDisabled =\n    organizationName.length === 0 || vatNumber.length === 0;\n\n  const selectedTab = useRef(null);\n\n  const containerRef = useRef(0);\n\n  const cardElement = useRef(null);\n\n  const inputRefs = useRef([]);\n\n  useEffect(() => {\n    // 👇️ scroll to top on page load\n\n    if (isError && activeStep != 1 && activeStep != 5 && activeStep != 4) {\n      const currentWidth = containerRef.current\n        ? containerRef.current.offsetWidth\n        : 0;\n      if (currentWidth >= 1055) {\n        document.getElementById(\"scroller\").scroll(0, 0);\n      } else {\n        selectedTab.current.scrollIntoView();\n      }\n    }\n  }, [isError]);\n\n  const validateOrganizationForm = (email) => {\n    const errors = {};\n    if (email.trim() === \"\") {\n      errors.email = \"Email is required\";\n    } else if (email.length > 0) {\n      if (!checkEmailValid(email.trim())) {\n        errors.email = \"Suggested format (name@company.com)\";\n      }\n    }\n\n    return errors;\n  };\n\n  const validateVerifyEmailForm = (verificationCode) => {\n    const errors = {};\n    if (verificationCode.trim() == \"\") {\n      errors.verificationCode = \"A verification code is required\";\n    } else if (verificationCode.length > 0) {\n      if (verificationCode.trim().length != 6) {\n        errors.verificationCode = \"Code should be 6 digit long\";\n      }\n    }\n\n    return errors;\n  };\n\n  const handleOrganizationFormSubmit = () => {\n    const errors = validateOrganizationForm(email);\n    setErrors(errors);\n\n    if (Object.keys(errors).length === 0) {\n      handleSignupRequest();\n    }\n  };\n\n  const handleVerifyEmailFormSubmit = () => {\n    const errors = validateVerifyEmailForm(verificationCode);\n    setErrors(errors);\n    if (Object.keys(errors).length === 0) {\n      handleVerifyEmail();\n    } else {\n      setIsError(true);\n    }\n  };\n\n  const handleAccountInformationFormSubmit = () => {\n    const error = {};\n    postalCodeValidation(postalCode);\n    error.fullName = fullName.trim().length === 0;\n    error.addressLine1 = addressLine1.trim().length === 0;\n    error.city = city.trim().length === 0;\n    error.fullName = fullName.trim().length === 0;\n    error.state = state.trim().length === 0;\n    error.phoneNumber = phoneNumber.length === 0;\n    setAccountInfoErrors(error);\n    if (phoneNumber.length == 0) {\n      setErrorMessage('Phone number is required')\n      setIsPhoneNumberValid(false)\n    }\n    else {\n      validatePhoneNumber(phoneNumber, countryDialCode, countryCode)\n    }\n\n    const emptyInput = inputRefs.current.find((ref) => ref && ref.value === \"\");\n\n    if (emptyInput) {\n      emptyInput.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    if (!personalInfoButtonDisabled) {\n      handlePersonalInfo();\n    }\n  };\n\n  const handleOrganizationInformationFormSubmit = () => {\n    const error = {};\n    error.organizationName = organizationName.trim().length === 0;\n    error.organizationNumber = vatNumber.trim().length === 0;\n    setOrganizationInfoErrors(error);\n    if (!taxInfoButtonDisabled) {\n      handleTaxInfo();\n    }\n  };\n\n  const handleCountryChange = (e) => {\n    const selectedItem = COUNTRIES.find((item) => item.name === e.target.value);\n    if (Object.keys(selectedItem).length == 0) {\n      setPhoneNumber('')\n    }\n    else {\n      setCountry(e.target.value)\n      setPhoneNumber(selectedItem?.dial_code.toString())\n      setCountryCode(selectedItem?.code)\n      setCountryDialCode(selectedItem?.dial_code.toString().replace(\"+\", \"\"))\n    }\n  }\n\n  return (\n    <>\n      {loadingSuccess ? (\n        <>\n          <div className=\"loader-page\">\n            <InlineLoading description=\"Creating Account\" />\n          </div>\n        </>\n      ) : (\n        <div\n          style={{ display: \"flex\", flexDirection: \"column\" }}\n          ref={containerRef}\n        >\n          <Grid className={\"signup-grid\"}>\n            <Column className={\"right-column\"}>\n              <Content className=\"right-content\">\n                <div className=\"signup-heading-text-wrapper\">\n                  <span>\n                    <Heading prefix=\"\" className=\"signup-heading-text bold\">\n                      Create your\n                    </Heading>\n                    <span style={{ display: \"flex\" }}>\n                      <Heading prefix=\"\" className=\"signup-heading-text \">\n                        Bynar&nbsp;\n                      </Heading>\n                      <Heading\n                        prefix=\"Bynar\"\n                        className=\"signup-heading-text bold\"\n                      >\n                        account\n                      </Heading>\n                    </span>\n                  </span>\n                  <div className=\"signup-text\">\n                    <p className=\"content\">\n                      Access to trials, demos, starter kits, services and APIs\n                    </p>\n                  </div>\n                </div>\n              </Content>\n            </Column>\n            <div className=\"form-container\" ref={selectedTab}>\n              <Column className={\"left-column\"} id=\"scroller\">\n                <Content className={\"signup-container\"} style={{ padding: 0 }}>\n                  <div className=\"heading-container\">\n                    <div\n                      className=\"login-link\"\n                      style={{ marginBottom: \"1.5rem\" }}\n                    >\n                      Already have an BYNAR account?{\" \"}\n                      <Link href=\"/signin\">Log in</Link>\n                    </div>\n                    <Heading\n                      style={{\n                        fontSize: \"28px\",\n                        fontWeight: \"400\",\n                        marginBottom: \"16px\",\n                      }}\n                    >\n                      Sign up for an Bynar account\n                    </Heading>\n                  </div>\n                  <hr className=\"underline\" />\n                </Content>\n                {typeof errorNotification === \"object\" &&\n                  Object.keys(errorNotification).length !== 0 ? (\n                  <div>\n                    <ToastNotification\n                      className=\"error-notification-box\"\n                      iconDescription=\"describes the close button\"\n                      subtitle={errorNotification?.title}\n                      timeout={0}\n                      title={\"\"}\n                      kind={errorNotification?.status}\n                      onCloseButtonClick={() => {\n                        setErrorNotification({});\n                        setIsError(false);\n                      }}\n                    />\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n\n                <div className=\"signup-form\">\n                  {activeStep === 1 && (\n                    <div className=\"account-info-box\">\n                      <div className=\"account-heading\">\n                        <p className=\"heading\">1. Organization account</p>\n                      </div>\n                      <TextInput\n                        id=\"email\"\n                        className=\"email-form-input\"\n                        // hideLabel={true}\n                        value={email}\n                        labelText=\"E-mail\"\n                        onChange={(e) => handleEmailChange(e.target.value)}\n                        invalid={!!errors.email}\n                        invalidText={errors.email}\n                        disabled={loading ? true : false}\n                      />\n                      {loading ? (\n                        <div style={{ marginTop: \"32px\" }}>\n                          <InlineLoading\n                            description={\"\"}\n                            className=\"submit-button-loading\"\n                          />\n                        </div>\n                      ) : (\n                        <div style={{ marginTop: \"32px\" }}>\n                          <Button\n                            kind=\"tertiary\"\n                            onClick={handleOrganizationFormSubmit}\n                          >\n                            {\"Next\"}\n                          </Button>\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {activeStep === 2 && (\n                    <div className=\"account-info-box\">\n                      <div className=\"account-heading\">\n                        <p className=\"heading\">2. Verify email</p>\n                      </div>\n                      <div className=\"verification-box\">\n                        <TextInput\n                          type=\"text\"\n                          className=\"verification-text-input\"\n                          id=\"verification code\"\n                          labelText=\"Verification token\"\n                          placeholder=\"6 digit code\"\n                          value={verificationCode}\n                          onChange={(e) =>\n                            handleVerificationCodeChange(e.target.value)\n                          }\n                          invalid={!!errors.verificationCode}\n                          invalidText={errors.verificationCode}\n                          disabled={loading ? true : false}\n                        />\n                      </div>\n                      <div>\n                        <p className=\"email-text\">\n                          Didn’t receive the email? Check your spam filter for\n                          an email from noreply@bynar.al.\n                        </p>\n                      </div>\n                      <div>\n                        {resendCodeLoading ? (\n                          <div\n                            style={{\n                              display: \"flex\",\n                              justifyContent: \"flex-start\",\n                              alignItems: \"center\",\n                              gap: \"8px\",\n                            }}\n                          >\n                            <InlineLoading\n                              description={\"re-sending confirmation-code\"}\n                              className=\"submit-button-loading\"\n                            />\n                            {/* <p className='email-text'>re-sending confirmation-code </p> */}\n                          </div>\n                        ) : (\n                          <p\n                            className=\"resend-code\"\n                            onClick={handleSignupRequest}\n                          >\n                            Resend code\n                          </p>\n                        )}\n                      </div>\n                      <hr className=\"underline-border\" />\n                      <div>\n                        <p className=\"verify-email-text\">\n                          Bynar may use my contact data to keep me informed of\n                          products, services and offerings:\n                        </p>\n                      </div>\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        <Checkbox\n                          labelText=\"by email\"\n                          checked={isChecked}\n                          id=\"checkbox-label-1\"\n                          onChange={(_, { checked }) => {\n                            setIsChecked(checked);\n                          }}\n                        />\n                      </div>\n                      <div>\n                        <p className=\"verify-email-text\">\n                          You can withdraw your marketing consent at any time by\n                          submitting an{\" \"}\n                          <Link href=\"/signup\">opt-out request</Link>. Also you\n                          may unsubscribe from receiving marketing emails by\n                          clicking the unsubscribe link in each email.\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"verify-email-text\">\n                          More information on our processing can be found in the{\" \"}\n                          <Link href=\"/signup\">Bynar Privacy Statement.</Link>{\" \"}\n                          By submitting this form, I acknowledge that I have\n                          read and understand the Bynar Privacy Statement.\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"verify-email-text\">\n                          I accept the product{\" \"}\n                          <Link href=\"/signup\">Terms and Conditions</Link> of\n                          this registration form.\n                        </p>\n                      </div>\n                      {verifyEmailLoading ? (\n                        <div style={{ marginTop: \"32px\" }}>\n                          <InlineLoading\n                            description={\"\"}\n                            className=\"submit-button-loading\"\n                          />\n                        </div>\n                      ) : (\n                        <div\n                          style={{ marginTop: \"32px\", marginBottom: \"16px\" }}\n                        >\n                          <Button\n                            kind=\"tertiary\"\n                            onClick={() => handleVerifyEmailFormSubmit()}\n                          >\n                            Verify Email\n                          </Button>\n                          <hr className=\"underline-border\" />\n                        </div>\n                      )}\n                    </div>\n                  )}\n                  {activeStep === 3 && (\n                    <div className=\"account-info-box\">\n                      <div className=\"account-heading\">\n                        <p className=\"heading\">3. Account information</p>\n                      </div>\n                      <TextInput\n                        type=\"text\"\n                        ref={(el) => (inputRefs.current[0] = el)}\n                        name=\"fullName\"\n                        className=\"email-form-input\"\n                        id=\"full name\"\n                        labelText=\"Full name *\"\n                        value={fullName}\n                        onChange={handleFullName}\n                        invalid={accountInfoErrors.fullName}\n                        invalidText={\"Full name is required\"}\n                      />\n                      <Select\n                        className=\"country-select\"\n                        value={country}\n                        id=\"country-ci\"\n                        labelText=\"Country or region *\"\n                        onChange={handleCountryChange}\n                      >\n                        {COUNTRIES.map((countryObject, countryIndex) => (\n                          <SelectItem\n                            text={countryObject.name}\n                            value={countryObject.name}\n                            key={countryIndex}\n                          />\n                        ))}\n                      </Select>\n                      <TextInput\n                        type=\"text\"\n                        name=\"addressLine1\"\n                        className=\"email-form-input\"\n                        labelText=\"Address line 1 *\"\n                        ref={(el) => (inputRefs.current[1] = el)}\n                        id=\"address line 1\"\n                        value={addressLine1}\n                        onChange={handleAddressLine1}\n                        invalid={accountInfoErrors.addressLine1}\n                        invalidText={\"Address line1 is required\"}\n                      />\n                      <TextInput\n                        type=\"text\"\n                        id=\"address line 2\"\n                        className=\"email-form-input\"\n                        labelText=\"Address line 2 (optional)\"\n                        value={addressLine2}\n                        onChange={(e) => setAddressLine2(e.target.value)}\n                      />\n                      <TextInput\n                        type=\"text\"\n                        name=\"city\"\n                        className=\"email-form-input\"\n                        id=\"city\"\n                        ref={(el) => (inputRefs.current[2] = el)}\n                        labelText=\"City *\"\n                        value={city}\n                        onChange={handleCity}\n                        invalid={accountInfoErrors.city}\n                        invalidText={\"City name is required\"}\n                      />\n                      <TextInput\n                        type=\"text\"\n                        name=\"state\"\n                        className=\"email-form-input\"\n                        ref={(el) => (inputRefs.current[3] = el)}\n                        id=\"state\"\n                        labelText=\"State *\"\n                        value={state}\n                        onChange={handleState}\n                        invalid={accountInfoErrors.state}\n                        invalidText={\"State is required\"}\n                      />\n                      <TextInput\n                        type=\"text\"\n                        name=\"postalCode\"\n                        ref={(el) => (inputRefs.current[4] = el)}\n                        id=\"postalcode\"\n                        labelText=\"Postal code *\"\n                        className=\"postalcode\"\n                        value={postalCode}\n                        onChange={handlePostalCode}\n                        invalid={\n                          typeof postalCodeErrorNotification === \"object\" &&\n                          Object.keys(postalCodeErrorNotification).length !== 0\n                        }\n                        invalidText={\n                          postalCodeErrorNotification &&\n                            postalCodeErrorNotification.title\n                            ? postalCodeErrorNotification.title\n                            : \"\"\n                        }\n                      />\n                      <div style={{ marginTop: \"6px\" }}>\n                        <p className=\"input-heading\">Phone number *</p>\n                      </div>\n                      <PhoneInput\n                        className=\"phone-input-signup\"\n                        ref={(el) => (inputRefs.current[5] = el)}\n                        style={{\n                          border: !phoneNumberValid && errorMessage.length>0 ? \"2px solid red\" : 0,\n                        }}\n                        name=\"phoneNumber\"\n                        country={\"\"}\n                        value={phoneNumber}\n                        onChange={(value, country, formattedValue) =>\n                          handlePhoneNumber(value, country, formattedValue)\n                        }\n                      />\n                      {!phoneNumberValid && errorMessage.length>0 && (\n                        <p\n                          style={{\n                            marginTop: \"4px\",\n                            fontSize: \"12px\",\n                            color: \"#DA1E28\",\n                          }}\n                        >\n                          {errorMessage}\n                        </p>\n                      )}\n                      <div style={{ marginTop: \"32px\", marginBottom: \"16px\" }}>\n                        <Button\n                          className={\"submit-button\"}\n                          onClick={handleAccountInformationFormSubmit}\n                        >\n                          Next\n                        </Button>\n                        <hr class=\"underline-border\"></hr>\n                      </div>\n                    </div>\n                  )}\n                  {activeStep === 4 && (\n                    <div className=\"account-info-box\">\n                      <div className=\"account-heading\">\n                        <p className=\"heading\">4. Organization information</p>\n                      </div>\n                      <TextInput\n                        type=\"text\"\n                        name=\"organizationName\"\n                        className=\"email-form-input\"\n                        id=\"Organization Name\"\n                        labelText=\"Organization Name\"\n                        value={organizationName}\n                        onChange={handleOrganizationNameChange}\n                        invalid={organizationInfoErrors.organizationName}\n                        invalidText={\"Organization name is required\"}\n                      />\n                      <TextInput\n                        type=\"text\"\n                        name=\"organizationNumber\"\n                        className=\"email-form-input\"\n                        id=\"VAT/GST/Tax Number\"\n                        labelText=\"Organization Number\"\n                        value={vatNumber}\n                        onChange={handleVatNumberChange}\n                        invalid={organizationInfoErrors.organizationNumber}\n                        invalidText={\"Organization number is required\"}\n                      />\n                      <div style={{ marginTop: \"32px\", marginBottom: \"16px\" }}>\n                        <Button\n                          className={\"submit-button\"}\n                          onClick={handleOrganizationInformationFormSubmit}\n                        >\n                          Next\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                  {activeStep === 5 && (\n                    <>\n                      <div className=\"account-info-box\">\n                        <div className=\"account-heading\">\n                          <p className=\"heading\">5. Credit card information</p>\n                        </div>\n                      </div>\n                      <Frames\n                        config={{\n                          publicKey: \"pk_sbox_u4jn2iacxvzosov4twmtl2yzlqe\",\n                        }}\n                        ref={cardElement}\n                      >\n                        <div\n                          className=\"card-input-container\"\n                        >\n                          <div>\n                            <p className=\"input-heading\">Card details</p>\n                          </div>\n                          <div>\n                            <CardFrame className=\"card-number\" />\n                          </div>\n\n                          {loadingCardSuccess ? (\n                            <div className=\"create-account-loader\">\n                              <InlineLoading\n                                description={\"verifying card details...\"}\n                                className=\"submit-button-loading\"\n                              />\n                            </div>\n                          ) : (\n                            <div className=\"create-account\">                           \n                                <Button\n                                  className=\"submit-button\"\n                                  onClick={handleVerifyCardDetails}\n                                >\n                                  Verify card\n                                </Button>\n                            </div>\n                          )}\n                        </div>\n                      </Frames>\n                    </>\n                  )}\n                </div>\n              </Column>\n            </div>\n          </Grid>\n          <footer\n            className=\"carbon-footer\"\n            role=\"contentinfo\"\n            aria-label=\"BYNAR\"\n          >\n            <div className=\"footer-nav-container\">\n              <ul className=\"list\">\n                <li className=\"ui-list\">\n                  <Link href=\"#\">Contact</Link>\n                </li>\n                <li className=\"ui-list\">\n                  <Link href=\"#\">Privacy</Link>\n                </li>\n                <li className=\"ui-list\" style={{ width: \"400px\" }}>\n                  <Link href=\"#\">Terms Of Use</Link>\n                </li>\n              </ul>\n            </div>\n          </footer>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Signup;\n"],"names":["phoneUtil","PhoneNumberUtil","_useState","useNavigate","useState","_useState2","_slicedToArray","errorNotification","setErrorNotification","_useState3","_useState4","loading","setLoading","_useState5","_useState6","resendCodeLoading","setResendCodeLoading","_useState7","_useState8","verifyEmailLoading","setVerifyEmailLoading","_useState9","_useState10","loadingSuccess","setLoadingSuccess","_useState11","_useState12","password","_useState13","_useState14","email","setEmailAddress","_useState15","_useState16","isPasswordVisible","_useState17","Array","fill","_useState18","_useState19","_useState20","setpaswordStrengthWidth","_useState21","_useState22","_useState23","_useState24","emailIsValid","_useState25","_useState26","activeStep","setActiveStep","_useState27","_useState28","verificationCode","setVerificationCode","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","fullName","setFullName","_useState35","_useState36","setIsProfileInfoUpdated","_useState37","_useState38","_useState39","_useState40","country","setCountry","_useState41","_useState42","addressLine1","setAddressLine1","_useState43","_useState44","addressLine2","setAddressLine2","_useState45","_useState46","city","setCity","_useState47","_useState48","state","setState","_useState49","_useState50","postalCode","setPostalCode","_useState51","_useState52","phoneNumber","setPhoneNumber","_useState53","_useState54","setIsTaxInfoUpdated","_useState55","_useState56","vatNumber","setVatNumber","_useState57","_useState58","organizationName","setOrganizationName","_useState59","_useState60","organizationCountry","_useState61","_useState62","setGstValid","_useState63","_useState64","cardNumber","_useState65","_useState66","cardExpiryDate","_useState67","_useState68","cardCVV","_useState69","_useState70","isChecked","setIsChecked","_useState71","_useState72","_useState73","_useState74","isError","setIsError","_useState75","_useState76","isAccountInfoError","setIsAccountInfoError","_useState77","_useState78","isVerifyEmailInfoError","setIsVerifyEmailError","_useState79","_useState80","postalCodeErrorNotification","setPostalCodeErrorNotification","_useState81","_useState82","_useState83","_useState84","userId","setUserId","_useState85","_useState86","_useState87","_useState88","setValidationToken","ref","useRef","_useState89","_useState90","loadingCardSuccess","setLoadingCardSuccess","_useState91","_useState92","errors","setErrors","_useState93","_useState94","phoneNumberValid","setIsPhoneNumberValid","_useState95","_useState96","errorMessage","setErrorMessage","_useState97","_useState98","accountInfoErrors","setAccountInfoErrors","_useState99","organizationNumber","_useState100","organizationInfoErrors","setOrganizationInfoErrors","_useState101","_useState102","countryCode","setCountryCode","_useState103","_useState104","countryDialCode","setCountryDialCode","hackPatchToken","useAuth","personalInfoButtonDisabled","length","trim","Object","keys","validatePhoneNumber","value","dialCode","phoneNumberWithoutDialCode","toString","replace","number","parse","isValidNumber","e","useLayoutEffect","handlePasswordStrengthLength","_ref$current","tempArray","test","filter","i","current","offsetWidth","handleSignupRequest","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","response","res","wrap","_context","prev","next","fetch","concat","BaseURL","method","body","JSON","stringify","headers","sent","json","ok","title","status","error","t0","console","log","stop","apply","arguments","handleVerifyCard","token","_ref3","_callee3","_context3","id","name","handleCreateAccount","_ref4","_callee4","_context4","username","addressLine","VAT","organisationCountry","isAgreementSigned","postalCodeValidation","handleVerifyCardDetails","_ref6","_callee5","_context5","preventDefault","Frames","_x","taxInfoButtonDisabled","selectedTab","containerRef","cardElement","inputRefs","useEffect","document","getElementById","scroll","scrollIntoView","validateOrganizationForm","String","toLowerCase","match","validateVerifyEmailForm","handleVerifyEmailFormSubmit","_ref2","_callee2","_context2","code","accountID","handleVerifyEmail","_jsx","_Fragment","children","className","InlineLoading","description","_jsxs","style","display","flexDirection","Grid","Column","Content","Heading","prefix","padding","marginBottom","Link","href","fontSize","fontWeight","ToastNotification","iconDescription","subtitle","timeout","kind","onCloseButtonClick","TextInput","labelText","onChange","handleEmailChange","target","invalid","invalidText","disabled","marginTop","Button","onClick","type","placeholder","handleVerificationCodeChange","justifyContent","alignItems","gap","Checkbox","checked","_","_ref7","el","_e$target","_objectSpread","_defineProperty","Select","selectedItem","COUNTRIES","item","dial_code","countryObject","countryIndex","SelectItem","text","_e$target2","_e$target3","_e$target4","PhoneInput","border","formattedValue","handlePhoneNumber","color","emptyInput","find","behavior","class","_e$target6","_e$target5","config","publicKey","CardFrame","role","width","react_1","require","config_1","_super","_this","initializeFrames","props","debug","acceptedPaymentMethods","cardholder","localization","modes","schemeChoice","expiryDate","cvv","ready","frameActivated","frameFocus","frameBlur","frameValidationChanged","paymentMethodChanged","cardValidationChanged","cardSubmitted","cardTokenized","cardTokenizationFailed","cardBinChanged","window","init","__extends","prototype","componentDidMount","querySelector","CDN","shouldComponentUpdate","nextProps","billingAddress","phone","componentWillUnmount","removeAllEventHandlers","Events","CARD_SUBMITTED","CARD_TOKENIZATION_FAILED","CARD_TOKENIZED","CARD_VALIDATION_CHANGED","FRAME_ACTIVATED","FRAME_BLUR","FRAME_FOCUS","FRAME_VALIDATION_CHANGED","PAYMENT_METHOD_CHANGED","READY","render","isCardValid","submitCard","addEventHandler","event","handler","removeEventHandler","enableSubmitForm","Component","exports","__importDefault","classnames_1","_a","__rest","default","createElement","__assign","CARD_FRAME","CARD_NUMBER_FRAME","CVV_FRAME","EXPIRY_DATE_FRAME","SCHEME_CHOICE_FRAME","__exportStar"],"sourceRoot":""}